# Workflow name
name: Deploy Storybook Preview

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency: preview-${{ github.ref }}

# List of jobs
jobs:
  deploy:
    runs-on: ubuntu-22.04
    # Job steps
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm

      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: |
          npm run build-storybook --quiet

      - name: Install Netlify
        run: npm install netlify-cli --save-dev

      - name: Deploy preview to Netlify
        id: netlify_deploy
        run: |
          netlify deploy \
            --dir storybook-static \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }} \
            > deploy_output.txt

      - name: Comment
        id: url_preview
        run: |
          NETLIFY_PREVIEW_URL=$(cat deploy_output.txt | grep "Website draft URL: " | cut -d' ' -f4)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: DEBUG=WILL BE REMOVED
        run: echo ${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}

  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    # if: ${{ steps.preview }}
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm

      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Storybook tests
        run: npm run test-storybook
        env:
          TARGET_URL: '${{ steps.preview.outputs }}'
